# ----------------------------
# Namespace: ingress-nginx
# ----------------------------
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
---
# ----------------------------
# Namespace: zulip
# ----------------------------
apiVersion: v1
kind: Namespace
metadata:
  name: zulip
---
# ----------------------------
# Service: expose ingress controller on 80/443 via externalIPs
# (adjust selector labels to match your ingress controller pods if needed)
# ----------------------------
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-loadbalancer
  namespace: ingress-nginx
  labels:
    app: ingress-nginx-loadbalancer
spec:
  type: ClusterIP
  # advertise both node IPs on the network. Clients can connect to either IP.
  externalIPs:
    - 192.168.137.10
    - 192.168.137.11
  selector:
    # Ensure these labels match your ingress-nginx controller pod labels.
    # If your controller uses different labels, update these to match.
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/component: controller
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443
---
# ----------------------------
# Ingress: route host -> zulip service; enable TLS via zulip-tls-secret
# ----------------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zulip-ingress
  namespace: zulip
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  ingressClassName: "nginx"
  rules:
    - host: localhost.shaik.info
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: zulip
                port:
                  number: 80
  tls:
    - hosts:
        - localhost.shaik.info
      secretName: zulip-tls-secret
